{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","Navtitle","class","onClick","togglemode","for","Textform","useState","text","settext","heading","rows","value","onChange","event","target","placeholder","disabled","length","up","toUpperCase","showalert","width","low","toLowerCase","newText","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","role","word","lower","capitalize","msg","defaultProps","abouttext","App","setmode","setalert","message","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f018b9e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // }) \r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'black',\r\n        backgroundColor: props.mode ==='dark'?'#212529':'white' \r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#212529\"'}}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    <strong>Analyze Your text </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free to use </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong>Browser Compatible </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.Navtitle}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item active\">\r\n              <Link class=\"nav-link\" to=\"/\">\r\n                Home \r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n              <Link class=\"nav-link\" to=\"about\">\r\n                About \r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"dark\" ? \"light\" : \"dark\"\r\n              }`}\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.togglemode}\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n                Enable dark mode\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//this is to check props type are provided right or wrong\r\nNavbar.propTypes = {\r\n  Navtitle: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  Navtitle: \"Title is here\",\r\n  abouttext: \"About Text Here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text, settext] = useState(\"\");\r\n\r\n  let HandleUpclick = (event) => {\r\n    let up = text.toUpperCase() ;\r\n    //console.log(text.length);\r\n    settext(up);\r\n    props.showalert(\"Text converted to uppercase\" , \"success\")\r\n  };\r\n\r\n  let HandleDwclick = () => {\r\n    let low = text.toLowerCase() ;\r\n    settext(low);\r\n    props.showalert(\"Text converted to lowercase\" , \"success\")\r\n  };\r\n\r\n  let HandleClearclick = () =>{\r\n    settext(\"\");\r\n    props.showalert(\"Text Cleared\" , \"warning\")\r\n  }\r\n\r\n  let Handleonchange = (event) => {\r\n      settext(event.target.value)\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    settext(newText.join(\" \"));\r\n    props.showalert(\"Extra spaces removed!\", \"success\");\r\n}\r\n\r\n  // to capitalize the first character of any string\r\n  const capitalize = () => {\r\n        \r\n    let firstchar = text.charAt(0); // storing the first char of the string\r\n    let newText= firstchar.toUpperCase(); // converting that to uppercase\r\n    settext(newText+text.slice(1)); // printing it with rest excluding the first char by using slice\r\n\r\n}\r\n  let Handlecopy = ()=>{\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showalert(\"Text copied to clipboard\" , \"success\")\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"mb-3 my-3\">\r\n      <h1>{props.heading}</h1>\r\n      <textarea\r\n        className=\"form-control\"\r\n        id=\"myBox\"\r\n        rows=\"8\"\r\n        value={text}\r\n        onChange={Handleonchange}\r\n        placeholder=\"Enter your text here\"\r\n        style={{backgroundColor : props.mode ===\"light\" ?\"white\":\"#212529\" , color : props.mode ===\"light\" ?\"black\":\"white\"}}\r\n      ></textarea>\r\n\r\n      <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-1\" onClick={HandleUpclick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-2\" width=\"100vw\" onClick={HandleDwclick}>\r\n      Convert to Lowercase\r\n      </button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={HandleClearclick}>\r\n      Clear-Text\r\n      </button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={capitalize}>\r\n      Capitalize 1st letter \r\n      </button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={Handlecopy}>\r\n      Copy text\r\n      </button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={handleExtraSpaces}>\r\n      Remove space\r\n      </button>\r\n\r\n    </div>\r\n    <hr/>\r\n    <div className=\"container\">\r\n        <h2>Your Test Summary</h2>\r\n        <p>text having <b>{text.split(\" \").filter((element)=>{\r\n          return element.length!==0;\r\n        }).length}</b> words and <b>{text.length}</b> characters</p>\r\n        \r\n        <p>approx <b>{0.008 * text.split(\" \").filter((element)=>{\r\n          return element.length!==0;\r\n        }).length}</b> minutes required to read </p>\r\n    </div>\r\n    <hr/>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something in textarea to preview here  \"}</p>\r\n    <hr/>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize  = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height : \"40px\"}}>\r\n     { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  let showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#121212\";\n      document.body.style.color = \"white\";\n      showalert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showalert(\"Light mode is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          Navtitle=\"TextUtils\"\n          abouttext=\"About\"\n          mode={mode}\n          togglemode={togglemode}\n        />\n        <Alert alert={alert} />\n       \n\n        <Switch>\n          <Route path=\"/about\">\n            <About togglemode={togglemode} mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"container\">\n              <Textform\n                showalert={showalert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            </div>\n          </Route>\n        </Switch>\n\n        <div />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}